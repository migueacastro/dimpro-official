{
  "version": 3,
  "sources": ["../../string-comparison/dist/index.mjs"],
  "sourcesContent": ["var n=class g{static initParams(r,i){return[r.replace(/\\s+/g,\"\").toLowerCase(),i.replace(/\\s+/g,\"\").toLowerCase()]}static checkThanosType(r){if(typeof r!=\"string\")throw new Error(\"first argument should be a string\")}static checkRivalType(r){if(typeof r!=\"string\")throw new Error(\"second argument should be a string\")}static checkAvengersType(r){if(!Array.isArray(r))throw new Error(\"second argument should be an array of strings\");if(r.find(i=>typeof i!=\"string\"))throw new Error(\"second argument should be an array of strings\")}sortMatch(r,i){return g.checkThanosType(r),g.checkAvengersType(i),i.map((t,e)=>({member:t,index:e,rating:this.similarity(r,t)})).sort((t,e)=>t.rating-e.rating)}};var p=class extends n{similarity(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);if(!t.length&&!e.length)return 1;if(!t.length||!e.length)return 0;if(t===e)return 1;let a=Array.from(new Set(t.split(\"\").concat(e.split(\"\")))),c=this.stringVectorization(t.split(\"\"),a),l=this.stringVectorization(e.split(\"\"),a),[h,s,o]=[0,0,0];for(let m=0;m<c.length;++m)h+=c[m]*l[m],s+=c[m]*c[m],o+=l[m]*l[m];return s=Math.sqrt(s),o=Math.sqrt(o),Number(h)/(s*o)}distance(r,i){return 1-this.similarity(r,i)}stringVectorization(r,i){return i.map(t=>r.includes(t)?1:0)}};var y=class extends n{similarity(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i),[a,c]=[t.length,e.length];if(!t.length&&!e.length||t===e)return 1;if(a<2||c<2)return 0;let l=new Map;for(let s=0;s<a-1;s++){let o=t.slice(s,s+2),m=l.has(o)?l.get(o)+1:1;l.set(o,m)}let h=0;for(let s=0;s<c-1;s++){let o=e.slice(s,s+2),m=l.has(o)?l.get(o):0;m>0&&(l.set(o,m-1),++h)}return 2*h/(a+c-2)}distance(r,i){return 1-this.similarity(r,i)}};var b=class extends n{similarity(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);if(!t.length&&!e.length||t===e)return 1;let a=new Set(t.split(\"\").concat(e.split(\"\"))),c=new Set(t.split(\"\").filter(l=>new Set(e).has(l)));return Number(c.size)/a.size}distance(r,i){return 1-this.similarity(r,i)}};var d=class extends n{similarity(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);return!t.length&&!e.length?1:1-Number(this.distance(t,e))/Math.max(t.length,e.length)}distance(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);if(t===e)return 0;let[a,c]=[t.length,e.length];if(!a)return c;if(!c)return a;let l=[...Array(a+1)].map(()=>Array(c+1).fill(0));for(let s=0;s<=a;++s)l[s][0]=s;for(let s=0;s<=c;++s)l[0][s]=s;let h;for(let s=1;s<=a;++s)for(let o=1;o<=c;++o)h=t[s-1]===e[o-1]?0:1,l[s][o]=Math.min(l[s-1][o]+1,l[s][o-1]+1,l[s-1][o-1]+h);return l[a][c]}};var T=class g extends n{static lcsLength(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i),[a,c]=[t.length,e.length],l=[...Array(a+1)].map(()=>Array(c+1).fill(0));for(let h=1;h<=a;++h)for(let s=1;s<=c;++s)l[h][s]=t[h-1]===e[s-1]?l[h-1][s-1]+1:Math.max(l[h][s-1],l[h-1][s]);return l[a][c]}similarity(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);return!t.length&&!e.length||t===e?1:2*g.lcsLength(t,e)/(t.length+e.length)}distance(r,i){let[t,e]=n.initParams(r,i);return t.length+e.length-2*g.lcsLength(t,e)}};var k=class g extends n{static lcsLength(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=[r.length,i.length],a=[...Array(t+1)].map(()=>Array(e+1).fill(0));for(let c=1;c<=t;++c)for(let l=1;l<=e;++l)a[c][l]=r[c-1]===i[l-1]?a[c-1][l-1]+1:Math.max(a[c][l-1],a[c-1][l]);return a[t][e]}similarity(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);return!t.length&&!e.length||t===e?1:Number(g.lcsLength(t,e))/Math.max(t.length,e.length)}distance(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);return t===e?0:1-this.similarity(t,e)}};var x=class extends n{distance(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);if(!t.length&&!e.length)return 1;if(!t.length||!e.length)return 0;if(t===e||t===e)return 1;let a=t.length,c=e.length;if(a===0||c===0)return 0;let l=Math.floor(Math.max(a,c)/2)-1,h=0,s=new Array(t.length).fill(0),o=new Array(e.length).fill(0);for(let u=0;u<a;u++)for(let f=Math.max(0,u-l);f<Math.min(c,u+l+1);f++)if(t[u]===e[f]&&o[f]===0){s[u]=1,o[f]=1,h++;break}if(h===0)return 0;let m=0,w=0;for(let u=0;u<a;u++)if(s[u]===1){for(;o[w]===0;)w++;t[u]!==e[w++]&&m++}return m/=2,(h/a+h/c+(h-m)/h)/3}similarity(r,i){let t=this.distance(r,i);if(t>.7){let e=0;for(let a=0;a<Math.min(r.length,i.length)&&r[a]===i[a];a++)e++;e=Math.min(4,e),t+=.1*e*(1-t)}return t}};var S=new p,A=new y,P=new b,j=new d,M=new T,L=M,v=new k,R=v,z=new x,C={cosine:S,diceCoefficient:A,jaccardIndex:P,levenshtein:j,lcs:M,longestCommonSubsequence:L,mlcs:v,metricLcs:R,jaroWinkler:z},et=C;export{et as default};\n"],
  "mappings": "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",
  "names": ["g"]
}
